{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1758340726784.8027\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, Form } from \"@remix-run/react\";\nimport { createGraphQLClient, LOGIN, CONFIRM_LOGIN } from \"../lib/graphql-client\";\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const step = formData.get(\"step\");\n  const email = formData.get(\"email\");\n  const client = createGraphQLClient();\n  try {\n    if (step === \"sendCode\") {\n      await client.request(LOGIN, {\n        email\n      });\n      return json({\n        step: \"confirmCode\",\n        email,\n        success: true\n      });\n    }\n    if (step === \"confirmCode\") {\n      const code = formData.get(\"code\");\n      const result = await client.request(CONFIRM_LOGIN, {\n        email,\n        code\n      });\n\n      // Set the JWT token as an HTTP-only cookie\n      const headers = new Headers();\n      headers.append(\"Set-Cookie\", `auth-token=${result.confirmLogin}; HttpOnly; Path=/; Max-Age=604800; SameSite=Lax`);\n      return redirect(\"/orders\", {\n        headers\n      });\n    }\n    return json({\n      error: \"Invalid step\"\n    }, {\n      status: 400\n    });\n  } catch (error) {\n    return json({\n      error: error.message || \"Login failed\",\n      step: formData.get(\"step\"),\n      email: formData.get(\"email\")\n    }, {\n      status: 400\n    });\n  }\n}\nexport default function Login() {\n  _s();\n  const actionData = useActionData();\n  const [step, setStep] = useState(actionData?.step === \"confirmCode\" ? \"code\" : \"email\");\n  if (step === \"code\" || actionData?.step === \"confirmCode\") {\n    return <div className=\"max-w-md mx-auto mt-16 p-6 bg-white border border-gray-200 rounded-lg\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n          Enter Verification Code\n        </h1>\n        \n        <p className=\"text-gray-600 mb-6 text-center\">\n          We've sent a 6-digit code to {actionData?.email || \"your email\"}\n        </p>\n\n        <Form method=\"post\">\n          <input type=\"hidden\" name=\"step\" value=\"confirmCode\" />\n          <input type=\"hidden\" name=\"email\" value={actionData?.email || \"\"} />\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"code\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Verification Code\n            </label>\n            <input id=\"code\" name=\"code\" type=\"text\" required maxLength={6} className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-center text-2xl tracking-widest\" placeholder=\"000000\" />\n          </div>\n\n          {actionData?.error && <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-sm text-red-700\">{actionData.error}</p>\n            </div>}\n\n          <button type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 font-semibold\">\n            Verify & Login\n          </button>\n        </Form>\n\n        <div className=\"mt-4 text-center\">\n          <button onClick={() => setStep(\"email\")} className=\"text-blue-600 hover:text-blue-700 text-sm\">\n            Use different email\n          </button>\n        </div>\n\n        <div className=\"mt-6 p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\n          <p className=\"text-xs text-yellow-700\">\n            <strong>For testing:</strong> Check the API logs or use the test endpoint \n            <code className=\"bg-yellow-100 px-1 rounded\">/__test__/mailbox?email={actionData?.email || \"your-email\"}</code>\n          </p>\n        </div>\n      </div>;\n  }\n  return <div className=\"max-w-md mx-auto mt-16 p-6 bg-white border border-gray-200 rounded-lg\">\n      <h1 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n        Login to Your Account\n      </h1>\n\n      <Form method=\"post\">\n        <input type=\"hidden\" name=\"step\" value=\"sendCode\" />\n        \n        <div className=\"mb-4\">\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Email Address\n          </label>\n          <input data-testid=\"login-email-input\" id=\"email\" name=\"email\" type=\"email\" required className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" placeholder=\"Enter your email\" />\n        </div>\n\n        {actionData?.error && <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n            <p className=\"text-sm text-red-700\">{actionData.error}</p>\n          </div>}\n\n        <button data-testid=\"login-submit\" type=\"submit\" className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 font-semibold\">\n          Send Verification Code\n        </button>\n      </Form>\n\n      <div className=\"mt-6 p-3 bg-gray-50 border border-gray-200 rounded-md\">\n        <p className=\"text-xs text-gray-600\">\n          <strong>Demo users:</strong> Use <code className=\"bg-gray-100 px-1 rounded\">demo@acme.test</code> or <code className=\"bg-gray-100 px-1 rounded\">admin@acme.test</code>\n        </p>\n      </div>\n    </div>;\n}\n_s(Login, \"XaOyffLbi028J5p8COtFPqCsPO4=\", false, function () {\n  return [useActionData];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
