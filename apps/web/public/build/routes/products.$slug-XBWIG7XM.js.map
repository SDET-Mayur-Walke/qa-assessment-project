{
  "version": 3,
  "sources": ["../../../app/routes/products.$slug.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\products.$slug.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\products.$slug.tsx\");\n  import.meta.hot.lastModified = \"1758340726792.626\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useFetcher, useRouteError } from \"@remix-run/react\";\nimport { formatMoney } from \"shared\";\nimport { createGraphQLClient, GET_PRODUCT, ADD_TO_CART } from \"../lib/graphql-client\";\nimport { getSessionId } from \"../lib/session\";\nexport async function loader({\n  params\n}) {\n  const {\n    slug\n  } = params;\n  if (!slug) {\n    throw new Response(\"Product not found\", {\n      status: 404\n    });\n  }\n  const client = createGraphQLClient();\n  try {\n    const result = await client.request(GET_PRODUCT, {\n      slug\n    });\n    if (!result.product) {\n      throw new Response(\"Product not found\", {\n        status: 404\n      });\n    }\n    return json({\n      product: result.product\n    });\n  } catch (error) {\n    console.error(\"Failed to load product:\", error);\n    throw new Response(\"Failed to load product\", {\n      status: 500\n    });\n  }\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const productId = formData.get(\"productId\");\n  const quantity = parseInt(formData.get(\"quantity\")) || 1;\n  const sessionId = getSessionId(request);\n  const client = createGraphQLClient(undefined, undefined, sessionId);\n  try {\n    const result = await client.request(ADD_TO_CART, {\n      input: {\n        productId,\n        quantity\n      }\n    });\n    return json({\n      success: true,\n      cart: result.addToCart\n    });\n  } catch (error) {\n    return json({\n      success: false,\n      error: error.message || \"Failed to add to cart\"\n    }, {\n      status: 400\n    });\n  }\n}\nexport function ErrorBoundary() {\n  _s();\n  const error = useRouteError();\n  return <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">\n          Product Not Found\n        </h1>\n        <p className=\"text-gray-600 mb-6\">\n          The product you're looking for doesn't exist.\n        </p>\n        <a href=\"/\" className=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700\">\n          Back to Products\n        </a>\n      </div>\n    </div>;\n}\n_s(ErrorBoundary, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorBoundary;\nexport default function ProductDetail() {\n  _s2();\n  const {\n    product\n  } = useLoaderData();\n  const fetcher = useFetcher();\n  const isAddingToCart = fetcher.state === \"submitting\";\n  const addToCartError = fetcher.data?.error;\n  return <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div>\n          {product.imageUrl ? <img src={product.imageUrl} alt={product.name} className=\"w-full h-96 object-cover rounded-lg\" /> : <div className=\"w-full h-96 bg-gray-200 rounded-lg flex items-center justify-center\">\n              <span className=\"text-gray-400 text-6xl\">\uD83D\uDCE6</span>\n            </div>}\n        </div>\n\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            {product.name}\n          </h1>\n\n          <div className=\"flex items-center gap-4 mb-6\">\n            <span className=\"text-2xl font-semibold text-gray-900\">\n              {formatMoney(product.price)}\n            </span>\n            \n            {!product.inStock && <span className=\"bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-medium\">\n                Out of Stock\n              </span>}\n          </div>\n\n          {product.description && <div className=\"mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Description\n              </h2>\n              <p className=\"text-gray-600 leading-relaxed\">\n                {product.description}\n              </p>\n            </div>}\n\n          <div className=\"mb-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">\n              Categories\n            </h2>\n            <div className=\"flex flex-wrap gap-2\">\n              {product.tags.map(tag => <span key={tag} className=\"bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm\">\n                  {tag.charAt(0).toUpperCase() + tag.slice(1)}\n                </span>)}\n            </div>\n          </div>\n\n          <fetcher.Form method=\"post\">\n            <input type=\"hidden\" name=\"productId\" value={product.id} />\n            <div className=\"flex items-center gap-4 mb-4\">\n              <label htmlFor=\"quantity\" className=\"text-sm font-medium text-gray-700\">\n                Quantity:\n              </label>\n              <select id=\"quantity\" name=\"quantity\" className=\"border border-gray-300 rounded-md px-3 py-1\" defaultValue=\"1\">\n                {[1, 2, 3, 4, 5].map(num => <option key={num} value={num}>\n                    {num}\n                  </option>)}\n              </select>\n            </div>\n\n            {!product.inStock && <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\n                <div className=\"flex\">\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-red-800\">\n                      Out of Stock\n                    </h3>\n                    <p className=\"text-sm text-red-700 mt-1\">\n                      This product is currently unavailable.\n                    </p>\n                  </div>\n                </div>\n              </div>}\n\n            {addToCartError && <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\n                <p className=\"text-sm text-red-700\">{addToCartError}</p>\n              </div>}\n\n            <button data-testid=\"add-to-cart\" type=\"submit\" disabled={!product.inStock || isAddingToCart} className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-md font-semibold hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\">\n              {isAddingToCart ? \"Adding to Cart...\" : !product.inStock ? \"Out of Stock\" : \"Add to Cart\"}\n            </button>\n          </fetcher.Form>\n\n          {fetcher.data?.success && <div className=\"mt-4 bg-green-50 border border-green-200 rounded-md p-4\">\n              <p className=\"text-sm text-green-700\">\n                \u2705 Added to cart successfully!\n              </p>\n            </div>}\n        </div>\n      </div>\n    </div>;\n}\n_s2(ProductDetail, \"Z98jupgeU2oKH0pkywqrTe+WTeo=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c2 = ProductDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"ErrorBoundary\");\n$RefreshReg$(_c2, \"ProductDetail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
