{
  "version": 3,
  "sources": ["../../../app/routes/cart.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\cart.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\cart.tsx\");\n  import.meta.hot.lastModified = \"1758340726777.8318\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useFetcher, Form } from \"@remix-run/react\";\nimport { formatMoney } from \"shared\";\nimport { createGraphQLClient, GET_CART, UPDATE_CART_ITEM, REMOVE_FROM_CART, APPLY_COUPON } from \"../lib/graphql-client\";\nimport { getSessionId } from \"../lib/session\";\nexport async function loader({\n  request\n}) {\n  const sessionId = getSessionId(request);\n  const client = createGraphQLClient(undefined, undefined, sessionId);\n  try {\n    const result = await client.request(GET_CART);\n    return json({\n      cart: result.cart,\n      sessionId\n    });\n  } catch (error) {\n    console.error(\"Failed to load cart:\", error);\n    return json({\n      cart: {\n        items: [],\n        subtotal: 0,\n        discountTotal: 0,\n        total: 0,\n        version: 1\n      },\n      sessionId\n    });\n  }\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const actionType = formData.get(\"_action\");\n  const sessionId = getSessionId(request);\n  const client = createGraphQLClient(undefined, undefined, sessionId);\n  try {\n    switch (actionType) {\n      case \"updateQuantity\":\n        {\n          const productId = formData.get(\"productId\");\n          const quantity = parseInt(formData.get(\"quantity\"));\n          const result = await client.request(UPDATE_CART_ITEM, {\n            productId,\n            quantity\n          });\n          return json({\n            success: true,\n            cart: result.updateCartItem\n          });\n        }\n      case \"removeItem\":\n        {\n          const productId = formData.get(\"productId\");\n          const result = await client.request(REMOVE_FROM_CART, {\n            productId\n          });\n          return json({\n            success: true,\n            cart: result.removeFromCart\n          });\n        }\n      case \"applyCoupon\":\n        {\n          const code = formData.get(\"code\");\n          const result = await client.request(APPLY_COUPON, {\n            code\n          });\n          return json({\n            success: true,\n            cart: result.applyCoupon\n          });\n        }\n      default:\n        return json({\n          success: false,\n          error: \"Invalid action\"\n        }, {\n          status: 400\n        });\n    }\n  } catch (error) {\n    return json({\n      success: false,\n      error: error.message || \"Action failed\"\n    }, {\n      status: 400\n    });\n  }\n}\nexport default function Cart() {\n  _s();\n  const {\n    cart,\n    sessionId\n  } = useLoaderData();\n  const fetcher = useFetcher();\n  if (cart.items.length === 0) {\n    return <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Your Cart\n          </h1>\n          <p className=\"text-gray-600 text-lg mb-6\">\n            Your cart is empty\n          </p>\n          <a href=\"/\" className=\"bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700\">\n            Continue Shopping\n          </a>\n        </div>\n      </div>;\n  }\n  return <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">\n        Your Cart\n      </h1>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <div className=\"lg:col-span-2\">\n          {/* Hidden cart version for testing */}\n          <div data-testid=\"cart-version\" style={{\n          display: \"none\"\n        }}>\n            {cart.version}\n          </div>\n\n          <div className=\"bg-white border border-gray-200 rounded-lg\">\n            {cart.items.map((item, index) => <div key={item.product.id} className={`p-6 ${index < cart.items.length - 1 ? \"border-b border-gray-200\" : \"\"}`}>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    {item.product.imageUrl ? <img src={item.product.imageUrl} alt={item.product.name} className=\"h-16 w-16 object-cover rounded\" /> : <div className=\"h-16 w-16 bg-gray-200 rounded flex items-center justify-center\">\n                        <span className=\"text-gray-400\">\uD83D\uDCE6</span>\n                      </div>}\n                    \n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">\n                        {item.product.name}\n                      </h3>\n                      <p className=\"text-gray-600\">\n                        {formatMoney(item.product.price)} each\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-4\">\n                    <fetcher.Form method=\"post\">\n                      <input type=\"hidden\" name=\"_action\" value=\"updateQuantity\" />\n                      <input type=\"hidden\" name=\"productId\" value={item.product.id} />\n                      <select name=\"quantity\" defaultValue={item.quantity} onChange={e => {\n                    const form = e.target.closest(\"form\");\n                    fetcher.submit(form);\n                  }} className=\"border border-gray-300 rounded px-2 py-1\">\n                        {[0, 1, 2, 3, 4, 5].map(num => <option key={num} value={num}>\n                            {num === 0 ? \"Remove\" : num}\n                          </option>)}\n                      </select>\n                    </fetcher.Form>\n\n                    <div className=\"text-right\">\n                      <p className=\"font-medium text-gray-900\">\n                        {formatMoney(item.lineTotal)}\n                      </p>\n                    </div>\n\n                    <fetcher.Form method=\"post\">\n                      <input type=\"hidden\" name=\"_action\" value=\"removeItem\" />\n                      <input type=\"hidden\" name=\"productId\" value={item.product.id} />\n                      <button type=\"submit\" className=\"text-red-600 hover:text-red-700\">\n                        \u2715\n                      </button>\n                    </fetcher.Form>\n                  </div>\n                </div>\n              </div>)}\n          </div>\n        </div>\n\n        <div className=\"lg:col-span-1\">\n          <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Order Summary\n            </h2>\n\n            <div className=\"space-y-2 mb-4\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Subtotal</span>\n                <span>{formatMoney(cart.subtotal)}</span>\n              </div>\n              \n              {cart.discountTotal > 0 && <div className=\"flex justify-between text-green-600\">\n                  <span>\n                    Discount {cart.appliedCoupon && `(${cart.appliedCoupon})`}\n                  </span>\n                  <span>-{formatMoney(cart.discountTotal)}</span>\n                </div>}\n              \n              <div className=\"border-t border-gray-200 pt-2\">\n                <div className=\"flex justify-between font-semibold text-lg\">\n                  <span>Total</span>\n                  <span>{formatMoney(cart.total)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">\n                Apply Coupon\n              </h3>\n              <fetcher.Form method=\"post\" className=\"flex\">\n                <input type=\"hidden\" name=\"_action\" value=\"applyCoupon\" />\n                <input data-testid=\"cart-apply-coupon\" type=\"text\" name=\"code\" placeholder=\"Enter coupon code\" className=\"flex-1 border border-gray-300 rounded-l-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                <button type=\"submit\" className=\"bg-gray-600 text-white px-4 py-2 rounded-r-md hover:bg-gray-700\">\n                  Apply\n                </button>\n              </fetcher.Form>\n              {fetcher.data?.error && <p className=\"text-sm text-red-600 mt-2\">\n                  {fetcher.data.error}\n                </p>}\n            </div>\n\n            <Form action=\"/checkout\" method=\"post\">\n              <button data-testid=\"checkout-submit\" type=\"submit\" className=\"w-full bg-blue-600 text-white py-3 rounded-md font-semibold hover:bg-blue-700\">\n                Proceed to Checkout\n              </button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(Cart, \"QmlGuUukexwsBm/YGOW/XOLzaqg=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
